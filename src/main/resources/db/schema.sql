-- =====================================================
-- WORKFLOW MANAGEMENT SYSTEM - DATABASE SCHEMA
-- =====================================================

------------------------------------------------------------
-- SEQUENCES
------------------------------------------------------------
CREATE SEQUENCE SEQ_WORKFLOW_USER START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_ROLE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_CONFIG START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_CONFIG_ROLE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_CONFIG_TASK START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_CONFIG_TASK_FILE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_CONFIG_PARAM START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TASK_DECISION_OUTCOME START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_CALENDAR START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_CALENDAR_DAY START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_INSTANCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_INSTANCE_ROLE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_INSTANCE_TASK START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKFLOW_INSTANCE_TASK_FILE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TASK_INSTANCE_DECISION_OUTCOME START WITH 1 INCREMENT BY 1;

------------------------------------------------------------
-- REFERENCE LAYER
------------------------------------------------------------
CREATE TABLE WORKFLOW_USER (
    USER_ID            NUMBER PRIMARY KEY,
    USERNAME           VARCHAR2(100) NOT NULL UNIQUE,
    FIRST_NAME         VARCHAR2(100),
    LAST_NAME          VARCHAR2(100),
    EMAIL              VARCHAR2(255) NOT NULL,
    ESCALATION_TO      NUMBER,  -- mapped to another USER_ID
    IS_ACTIVE          CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    CREATED_BY         VARCHAR2(100) NOT NULL,
    CREATED_ON         TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    UPDATED_BY         VARCHAR2(100),
    UPDATED_ON         TIMESTAMP,
    CONSTRAINT FK_WORKFLOW_USER_ESCALATION FOREIGN KEY (ESCALATION_TO)
        REFERENCES WORKFLOW_USER(USER_ID)
);

CREATE INDEX IDX_WORKFLOW_USER_ESCALATION ON WORKFLOW_USER(ESCALATION_TO);

CREATE TABLE WORKFLOW_ROLE (
    ROLE_ID        NUMBER PRIMARY KEY,
    ROLE_NAME      VARCHAR2(100) NOT NULL UNIQUE,
    IS_ACTIVE      CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    CREATED_BY     VARCHAR2(100) NOT NULL,
    CREATED_ON     TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    UPDATED_BY     VARCHAR2(100),
    UPDATED_ON     TIMESTAMP
);

------------------------------------------------------------
-- CONFIGURATION LAYER
------------------------------------------------------------
CREATE TABLE WORKFLOW_CONFIG (
    WORKFLOW_ID              NUMBER PRIMARY KEY,
    NAME                     VARCHAR2(255) NOT NULL,
    DESCRIPTION              VARCHAR2(1000),
    REMINDER_BEFORE_DUE_MINS NUMBER,
    MINUTES_AFTER_DUE        NUMBER,
    ESCALATION_AFTER_MINS    NUMBER,
    DUE_IN_MINS              NUMBER,
    IS_ACTIVE                CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    CALENDAR_ID              NUMBER,  -- Reference to the assigned calendar for this workflow
    CREATED_BY               VARCHAR2(100) NOT NULL,
    CREATED_ON               TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    UPDATED_BY               VARCHAR2(100),
    UPDATED_ON               TIMESTAMP
);

CREATE TABLE WORKFLOW_CONFIG_ROLE (
    ID             NUMBER PRIMARY KEY,
    WORKFLOW_ID    NUMBER NOT NULL REFERENCES WORKFLOW_CONFIG(WORKFLOW_ID) ON DELETE CASCADE,
    ROLE_ID        NUMBER NOT NULL REFERENCES WORKFLOW_ROLE(ROLE_ID),
    USER_ID        NUMBER NOT NULL REFERENCES WORKFLOW_USER(USER_ID),
    IS_ACTIVE      CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N'))
);

CREATE INDEX IDX_WORKFLOW_CONFIG_ROLE_WORKFLOW ON WORKFLOW_CONFIG_ROLE(WORKFLOW_ID);

CREATE TABLE WORKFLOW_CONFIG_TASK (
    TASK_ID             NUMBER PRIMARY KEY,
    WORKFLOW_ID         NUMBER NOT NULL REFERENCES WORKFLOW_CONFIG(WORKFLOW_ID) ON DELETE CASCADE,
    NAME                VARCHAR2(255) NOT NULL,
    TASK_TYPE           VARCHAR2(50) CHECK (TASK_TYPE IN (
                            'FILE_UPLOAD','FILE_UPDATE','CONSOLIDATE_FILE','DECISION')),
    ROLE_ID             NUMBER REFERENCES WORKFLOW_ROLE(ROLE_ID),
    EXPECTED_COMPLETION NUMBER,
    SEQUENCE_ORDER      NUMBER NOT NULL,
    PARENT_TASK_IDS     VARCHAR2(500),  -- Comma-separated list of parent task IDs
    CAN_BE_REVISITED    CHAR(1) DEFAULT 'N' CHECK (CAN_BE_REVISITED IN ('Y','N')),
    MAX_REVISITS        NUMBER DEFAULT 0,
    ESCALATION_RULES    VARCHAR2(500),
    FILE_SELECTION_MODE VARCHAR2(50),  -- USER_SELECT, AUTO_ASSIGN, etc.
    SOURCE_TASK_IDS     VARCHAR2(500),  -- Comma-separated list of source task IDs
    FILE_SOURCE_TASK_IDS VARCHAR2(500), -- Comma-separated list of file source task IDs
    ALLOW_NEW_FILES     CHAR(1) DEFAULT 'N' CHECK (ALLOW_NEW_FILES IN ('Y','N')),
    CAN_RUN_IN_PARALLEL CHAR(1) DEFAULT 'N' CHECK (CAN_RUN_IN_PARALLEL IN ('Y','N')),
    PARALLEL_TASK_IDS   VARCHAR2(500),  -- Comma-separated list of parallel task IDs
    TASK_DESCRIPTION    VARCHAR2(1000),
    IS_DECISION_TASK    CHAR(1) DEFAULT 'N' CHECK (IS_DECISION_TASK IN ('Y','N')),
    DECISION_TYPE       VARCHAR2(50),   -- APPROVAL, REJECTION, CHOICE, etc.
    TASK_PRIORITY       VARCHAR2(20) DEFAULT 'MEDIUM',  -- LOW, MEDIUM, HIGH, CRITICAL
    AUTO_ESCALATION_ENABLED CHAR(1) DEFAULT 'Y' CHECK (AUTO_ESCALATION_ENABLED IN ('Y','N')),
    NOTIFICATION_REQUIRED CHAR(1) DEFAULT 'Y' CHECK (NOTIFICATION_REQUIRED IN ('Y','N')),
    TASK_STATUS         VARCHAR2(50) DEFAULT 'PENDING' CHECK (TASK_STATUS IN ('PENDING','IN_PROGRESS','COMPLETED','REJECTED')),
    TASK_STARTED_AT     TIMESTAMP,
    TASK_COMPLETED_AT   TIMESTAMP,
    TASK_REJECTED_AT    TIMESTAMP,
    TASK_REJECTION_REASON VARCHAR2(500),
    TASK_COMPLETED_BY   VARCHAR2(100),
    TASK_REJECTED_BY    VARCHAR2(100),
    -- New consolidation and decision routing fields
    CONSOLIDATION_MODE  VARCHAR2(50) DEFAULT 'MANUAL' CHECK (CONSOLIDATION_MODE IN ('MANUAL','AUTO','HYBRID')),
    CONSOLIDATION_RULES VARCHAR2(1000),  -- JSON string for consolidation logic
    FILE_SELECTION_STRATEGY VARCHAR2(50) DEFAULT 'ALL_AVAILABLE' CHECK (FILE_SELECTION_STRATEGY IN ('ALL_AVAILABLE','USER_SELECT','AUTO_SELECT')),
    MAX_FILE_SELECTIONS NUMBER,  -- Maximum number of files user can select for consolidation
    MIN_FILE_SELECTIONS NUMBER DEFAULT 1,  -- Minimum number of files required for consolidation
    CONSOLIDATION_TEMPLATE_ID NUMBER,  -- Reference to consolidation template
    DECISION_REQUIRES_APPROVAL CHAR(1) DEFAULT 'Y' CHECK (DECISION_REQUIRES_APPROVAL IN ('Y','N')),
    DECISION_APPROVAL_ROLE_ID NUMBER,  -- Role that can approve decisions
    REVISION_STRATEGY   VARCHAR2(50) DEFAULT 'SINGLE_TASK' CHECK (REVISION_STRATEGY IN ('SINGLE_TASK','CASCADE','SELECTIVE')),
    REVISION_TASK_MAPPING VARCHAR2(1000),  -- JSON string mapping decision outcomes to target tasks
    FILE_FILTER_JSON    CLOB,  -- JSON string for file filtering rules
    CONSOLIDATION_RULES_JSON CLOB,  -- JSON string for file consolidation rules
    DECISION_CRITERIA_JSON CLOB,  -- JSON string for decision criteria
    METADATA_JSON       CLOB   -- Additional task metadata in JSON format
);

CREATE INDEX IDX_WORKFLOW_CONFIG_TASK_WORKFLOW ON WORKFLOW_CONFIG_TASK(WORKFLOW_ID);
CREATE INDEX IDX_WORKFLOW_CONFIG_TASK_STATUS ON WORKFLOW_CONFIG_TASK(TASK_STATUS);
CREATE INDEX IDX_WORKFLOW_CONFIG_TASK_ROLE ON WORKFLOW_CONFIG_TASK(ROLE_ID);

CREATE TABLE WORKFLOW_CONFIG_TASK_FILE (
    FILE_ID              NUMBER PRIMARY KEY,
    TASK_ID              NUMBER NOT NULL REFERENCES WORKFLOW_CONFIG_TASK(TASK_ID) ON DELETE CASCADE,
    FILE_NAME            VARCHAR2(500),
    FILE_PATH            VARCHAR2(1000),
    FILE_LOCATION        VARCHAR2(1000),  -- Physical storage location (e.g., S3 bucket, local directory)
    FILE_TYPE_REGEX      VARCHAR2(100),   -- File type pattern (e.g., "*.*", "*.xls", "*.pdf")
    ACTION_TYPE          VARCHAR2(50) CHECK (ACTION_TYPE IN ('UPLOAD','UPDATE','CONSOLIDATE')),
    FILE_DESCRIPTION    VARCHAR2(500),
    IS_REQUIRED         CHAR(1) DEFAULT 'N' CHECK (IS_REQUIRED IN ('Y','N')),
    FILE_STATUS          VARCHAR2(50) DEFAULT 'PENDING' CHECK (FILE_STATUS IN ('PENDING','IN_PROGRESS','COMPLETED','REJECTED')),
    KEEP_FILE_VERSIONS  CHAR(1) DEFAULT 'Y' CHECK (KEEP_FILE_VERSIONS IN ('Y','N')),
    RETAIN_FOR_CURRENT_PERIOD CHAR(1) DEFAULT 'Y' CHECK (RETAIN_FOR_CURRENT_PERIOD IN ('Y','N')),
    FILE_COMMENTARY      VARCHAR2(1000),  -- Additional comments about the file
    CREATED_BY          VARCHAR2(100),
    CREATED_ON          TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_BY          VARCHAR2(100),
    UPDATED_ON          TIMESTAMP
);

CREATE INDEX IDX_WORKFLOW_CONFIG_TASK_FILE_TASK ON WORKFLOW_CONFIG_TASK_FILE(TASK_ID);
CREATE INDEX IDX_WORKFLOW_CONFIG_TASK_FILE_STATUS ON WORKFLOW_CONFIG_TASK_FILE(FILE_STATUS);

CREATE TABLE WORKFLOW_CONFIG_PARAM (
    PARAM_ID      NUMBER PRIMARY KEY,
    WORKFLOW_ID   NUMBER NOT NULL REFERENCES WORKFLOW_CONFIG(WORKFLOW_ID) ON DELETE CASCADE,
    PARAM_KEY     VARCHAR2(100) NOT NULL,
    PARAM_VALUE   VARCHAR2(1000),
    CREATED_BY    VARCHAR2(100),
    CREATED_ON    TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    UPDATED_BY    VARCHAR2(100),
    UPDATED_ON    TIMESTAMP
);

CREATE TABLE TASK_DECISION_OUTCOME (
    OUTCOME_ID          NUMBER PRIMARY KEY,
    TASK_ID             NUMBER NOT NULL REFERENCES WORKFLOW_CONFIG_TASK(TASK_ID) ON DELETE CASCADE,
    OUTCOME_NAME        VARCHAR2(100) NOT NULL,
    OUTCOME_DESCRIPTION VARCHAR2(500),
    NEXT_ACTION         VARCHAR2(100),  -- CONTINUE, REVISE, ESCALATE, etc.
    TARGET_TASK_ID      NUMBER,  -- Task to go to after this decision
    -- New decision routing fields
    REVISION_TYPE       VARCHAR2(50) DEFAULT 'SINGLE' CHECK (REVISION_TYPE IN ('SINGLE','CASCADE','SELECTIVE')),
    REVISION_TASK_IDS   VARCHAR2(500),  -- Comma-separated list of tasks to open for revision
    REVISION_STRATEGY   VARCHAR2(50) DEFAULT 'REPLACE' CHECK (REVISION_STRATEGY IN ('REPLACE','ADD','MERGE')),
    REVISION_PRIORITY   NUMBER DEFAULT 1,  -- Priority of this revision path
    REVISION_CONDITIONS VARCHAR2(1000),  -- JSON string for additional conditions
    AUTO_ESCALATE       CHAR(1) DEFAULT 'N' CHECK (AUTO_ESCALATE IN ('Y','N')),
    ESCALATION_ROLE_ID  NUMBER,  -- Role to escalate to on this path
    IS_ACTIVE           CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N')),
    CREATED_BY          VARCHAR2(100) NOT NULL,
    CREATED_ON          TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    UPDATED_BY          VARCHAR2(100),
    UPDATED_ON          TIMESTAMP
);

CREATE INDEX IDX_TASK_DECISION_TASK ON TASK_DECISION_OUTCOME(TASK_ID);

------------------------------------------------------------
-- CALENDAR LAYER
------------------------------------------------------------
CREATE TABLE WORKFLOW_CALENDAR (
    CALENDAR_ID     NUMBER PRIMARY KEY,
    CALENDAR_NAME   VARCHAR2(100) NOT NULL,
    DESCRIPTION     VARCHAR2(255),
    START_DATE      DATE NOT NULL,
    END_DATE        DATE NOT NULL,
    RECURRENCE      VARCHAR2(50),   -- NONE, DAILY, WEEKLY, MONTHLY, YEARLY
    CREATED_BY      VARCHAR2(100) NOT NULL,
    CREATED_AT      TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_BY      VARCHAR2(100),
    UPDATED_AT      TIMESTAMP
);

CREATE TABLE WORKFLOW_CALENDAR_DAYS (
    CALENDAR_DAY_ID NUMBER PRIMARY KEY,
    CALENDAR_ID     NUMBER NOT NULL,
    DAY_DATE        DATE NOT NULL,
    DAY_TYPE        VARCHAR2(20) CHECK (DAY_TYPE IN ('HOLIDAY','RUNDAY')),
    NOTE            VARCHAR2(255),

    CONSTRAINT FK_CALENDAR_DAYS_CAL
        FOREIGN KEY (CALENDAR_ID) REFERENCES WORKFLOW_CALENDAR(CALENDAR_ID)
);

CREATE INDEX IDX_CALENDAR_DAYS_CALENDAR ON WORKFLOW_CALENDAR_DAYS(CALENDAR_ID);
CREATE INDEX IDX_CALENDAR_DAYS_DATE ON WORKFLOW_CALENDAR_DAYS(DAY_DATE);

------------------------------------------------------------
-- EXECUTION / RUNTIME LAYER
------------------------------------------------------------
CREATE TABLE WORKFLOW_INSTANCE (
    INSTANCE_ID     NUMBER PRIMARY KEY,
    WORKFLOW_ID     NUMBER NOT NULL REFERENCES WORKFLOW_CONFIG(WORKFLOW_ID),
    STATUS          VARCHAR2(50) CHECK (STATUS IN ('PENDING','IN_PROGRESS','COMPLETED','FAILED','CANCELLED')),
    STARTED_BY      NUMBER REFERENCES WORKFLOW_USER(USER_ID),
    STARTED_ON      TIMESTAMP DEFAULT SYSTIMESTAMP,
    COMPLETED_ON    TIMESTAMP,
    ESCALATED_TO    NUMBER REFERENCES WORKFLOW_USER(USER_ID),
    CALENDAR_ID     NUMBER REFERENCES WORKFLOW_CALENDAR(CALENDAR_ID)
);

CREATE INDEX IDX_WORKFLOW_INSTANCE_WORKFLOW ON WORKFLOW_INSTANCE(WORKFLOW_ID);

CREATE TABLE WORKFLOW_INSTANCE_ROLE (
    ID            NUMBER PRIMARY KEY,
    INSTANCE_ID   NUMBER NOT NULL REFERENCES WORKFLOW_INSTANCE(INSTANCE_ID) ON DELETE CASCADE,
    ROLE_ID       NUMBER NOT NULL REFERENCES WORKFLOW_ROLE(ROLE_ID),
    USER_ID       NUMBER NOT NULL REFERENCES WORKFLOW_USER(USER_ID),
    IS_ACTIVE     CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y','N'))
);

CREATE TABLE WORKFLOW_INSTANCE_TASK (
    INSTANCE_TASK_ID NUMBER PRIMARY KEY,
    INSTANCE_ID      NUMBER NOT NULL REFERENCES WORKFLOW_INSTANCE(INSTANCE_ID) ON DELETE CASCADE,
    TASK_ID          NUMBER NOT NULL REFERENCES WORKFLOW_CONFIG_TASK(TASK_ID),
    STATUS           VARCHAR2(50) CHECK (STATUS IN ('PENDING','IN_PROGRESS','COMPLETED','FAILED','ESCALATED')),
    ASSIGNED_TO      NUMBER REFERENCES WORKFLOW_USER(USER_ID),
    STARTED_ON       TIMESTAMP DEFAULT SYSTIMESTAMP,
    COMPLETED_ON     TIMESTAMP,
    DECISION_OUTCOME VARCHAR2(255)
);

CREATE INDEX IDX_WORKFLOW_INSTANCE_TASK_INSTANCE ON WORKFLOW_INSTANCE_TASK(INSTANCE_ID);

CREATE TABLE WORKFLOW_INSTANCE_TASK_FILE (
    INSTANCE_FILE_ID NUMBER PRIMARY KEY,
    INSTANCE_TASK_ID NUMBER NOT NULL REFERENCES WORKFLOW_INSTANCE_TASK(INSTANCE_TASK_ID) ON DELETE CASCADE,
    FILE_NAME        VARCHAR2(500),
    FILE_PATH        VARCHAR2(1000),
    FILE_VERSION     NUMBER DEFAULT 1,
    ACTION_TYPE      VARCHAR2(50) CHECK (ACTION_TYPE IN (
                             'UPLOAD','UPDATE','CONSOLIDATE')),
    CREATED_BY       VARCHAR2(100),
    CREATED_AT       TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE INDEX IDX_WORKFLOW_INSTANCE_TASK_FILE_TASK ON WORKFLOW_INSTANCE_TASK_FILE(INSTANCE_TASK_ID);

CREATE TABLE TASK_INSTANCE_DECISION_OUTCOME (
    OUTCOME_ID            NUMBER PRIMARY KEY,
    INSTANCE_TASK_ID      NUMBER NOT NULL REFERENCES WORKFLOW_INSTANCE_TASK(INSTANCE_TASK_ID),
    OUTCOME_NAME          VARCHAR2(255) NOT NULL,
    NEXT_INSTANCE_TASK_ID NUMBER REFERENCES WORKFLOW_INSTANCE_TASK(INSTANCE_TASK_ID),
    PRIOR_INSTANCE_TASK_ID NUMBER REFERENCES WORKFLOW_INSTANCE_TASK(INSTANCE_TASK_ID),
    CREATED_BY            VARCHAR2(100),
    CREATED_AT            TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE INDEX IDX_TASK_INSTANCE_DECISION ON TASK_INSTANCE_DECISION_OUTCOME(INSTANCE_TASK_ID);

------------------------------------------------------------
-- AUDIT TABLES (with revision columns for Envers)
------------------------------------------------------------
-- Each audit table copies structure + adds REVISION_ID and REVISION_TYPE
CREATE TABLE WORKFLOW_USER_AUD AS SELECT * FROM WORKFLOW_USER WHERE 1=0;
ALTER TABLE WORKFLOW_USER_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_ROLE_AUD AS SELECT * FROM WORKFLOW_ROLE WHERE 1=0;
ALTER TABLE WORKFLOW_ROLE_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_CONFIG_AUD AS SELECT * FROM WORKFLOW_CONFIG WHERE 1=0;
ALTER TABLE WORKFLOW_CONFIG_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_CONFIG_ROLE_AUD AS SELECT * FROM WORKFLOW_CONFIG_ROLE WHERE 1=0;
ALTER TABLE WORKFLOW_CONFIG_ROLE_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_CONFIG_TASK_AUD AS SELECT * FROM WORKFLOW_CONFIG_TASK WHERE 1=0;
ALTER TABLE WORKFLOW_CONFIG_TASK_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_CONFIG_TASK_FILE_AUD AS SELECT * FROM WORKFLOW_CONFIG_TASK_FILE WHERE 1=0;
ALTER TABLE WORKFLOW_CONFIG_TASK_FILE_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_CONFIG_PARAM_AUD AS SELECT * FROM WORKFLOW_CONFIG_PARAM WHERE 1=0;
ALTER TABLE WORKFLOW_CONFIG_PARAM_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE TASK_DECISION_OUTCOME_AUD AS SELECT * FROM TASK_DECISION_OUTCOME WHERE 1=0;
ALTER TABLE TASK_DECISION_OUTCOME_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_CALENDAR_AUD AS SELECT * FROM WORKFLOW_CALENDAR WHERE 1=0;
ALTER TABLE WORKFLOW_CALENDAR_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_CALENDAR_DAYS_AUD AS SELECT * FROM WORKFLOW_CALENDAR_DAYS WHERE 1=0;
ALTER TABLE WORKFLOW_CALENDAR_DAYS_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_INSTANCE_AUD AS SELECT * FROM WORKFLOW_CONFIG WHERE 1=0;
ALTER TABLE WORKFLOW_INSTANCE_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_INSTANCE_ROLE_AUD AS SELECT * FROM WORKFLOW_INSTANCE_ROLE WHERE 1=0;
ALTER TABLE WORKFLOW_INSTANCE_ROLE_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_INSTANCE_TASK_AUD AS SELECT * FROM WORKFLOW_INSTANCE_TASK WHERE 1=0;
ALTER TABLE WORKFLOW_INSTANCE_TASK_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE WORKFLOW_INSTANCE_TASK_FILE_AUD AS SELECT * FROM WORKFLOW_INSTANCE_TASK_FILE WHERE 1=0;
ALTER TABLE WORKFLOW_INSTANCE_TASK_FILE_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));

CREATE TABLE TASK_INSTANCE_DECISION_OUTCOME_AUD AS SELECT * FROM TASK_INSTANCE_DECISION_OUTCOME WHERE 1=0;
ALTER TABLE TASK_INSTANCE_DECISION_OUTCOME_AUD ADD (REVISION_ID NUMBER, REVISION_TYPE CHAR(1));
