{
  "api_info": {
    "name": "DocWF Workflow Management System API",
    "version": "1.0.0",
    "base_url": "http://localhost:8080",
    "description": "Comprehensive REST API for managing workflows, tasks, and workflow executions"
  },
  "endpoints": {
    "users": {
      "get_all_users": {
        "method": "GET",
        "url": "/api/users",
        "description": "Retrieve all users with pagination",
        "query_params": {
          "page": "0",
          "size": "10",
          "isActive": "Y"
        },
        "response_example": {
          "content": [
            {
              "userId": 1,
              "username": "alice",
              "firstName": "Alice",
              "lastName": "Smith",
              "email": "alice@example.com",
              "isActive": "Y",
              "createdBy": "system",
              "createdOn": "2025-08-20T11:56:07.612172"
            }
          ],
          "totalElements": 5,
          "totalPages": 1,
          "size": 10,
          "number": 0
        }
      },
      "search_users": {
        "method": "GET",
        "url": "/api/users/search",
        "description": "Search users with multiple criteria",
        "query_params": {
          "username": "alice",
          "firstName": "Alice",
          "page": "0",
          "size": "10"
        }
      },
      "create_user": {
        "method": "POST",
        "url": "/api/users",
        "description": "Create a new user",
        "request_body": {
          "username": "newuser",
          "firstName": "New",
          "lastName": "User",
          "email": "newuser@example.com",
          "isActive": "Y",
          "createdBy": "system"
        },
        "response_example": {
          "userId": 6,
          "username": "newuser",
          "firstName": "New",
          "lastName": "User",
          "email": "newuser@example.com",
          "isActive": "Y",
          "createdBy": "system",
          "createdOn": "2025-08-20T18:55:00.000000"
        }
      },
      "get_user_by_id": {
        "method": "GET",
        "url": "/api/users/1",
        "description": "Get user by ID"
      },
      "update_user": {
        "method": "PUT",
        "url": "/api/users/1",
        "description": "Update user information",
        "request_body": {
          "firstName": "Updated Alice",
          "lastName": "Smith",
          "email": "alice.updated@example.com"
        }
      },
      "toggle_user_status": {
        "method": "PATCH",
        "url": "/api/users/1/status?isActive=N",
        "description": "Activate/deactivate user"
      }
    },
    "roles": {
      "get_all_roles": {
        "method": "GET",
        "url": "/api/roles",
        "description": "Retrieve all roles with pagination",
        "query_params": {
          "page": "0",
          "size": "10",
          "isActive": "Y"
        }
      },
      "create_role": {
        "method": "POST",
        "url": "/api/roles",
        "description": "Create a new role",
        "request_body": {
          "roleName": "Manager",
          "isActive": "Y",
          "createdBy": "system"
        }
      },
      "get_role_by_id": {
        "method": "GET",
        "url": "/api/roles/1",
        "description": "Get role by ID"
      },
      "assign_role_to_user": {
        "method": "POST",
        "url": "/api/roles/1/assign/user/1",
        "description": "Assign role to user"
      }
    },
    "workflows": {
      "get_all_workflows": {
        "method": "GET",
        "url": "/api/workflows",
        "description": "Retrieve all workflows with pagination",
        "query_params": {
          "page": "0",
          "size": "10",
          "isActive": "Y"
        }
      },
      "create_workflow": {
        "method": "POST",
        "url": "/api/workflows",
        "description": "Create a new workflow",
        "request_body": {
          "name": "Monthly Report Workflow",
          "description": "Automated monthly reporting process",
          "reminderBeforeDueMins": 30,
          "minutesAfterDue": 15,
          "escalationAfterMins": 60,
          "dueInMins": 120,
          "isActive": "Y",
          "createdBy": "system"
        }
      },
      "get_workflow_by_id": {
        "method": "GET",
        "url": "/api/workflows/1",
        "description": "Get workflow by ID"
      },
      "update_workflow": {
        "method": "PUT",
        "url": "/api/workflows/1",
        "description": "Update workflow configuration",
        "request_body": {
          "description": "Updated monthly reporting process",
          "dueInMins": 180
        }
      },
      "get_workflow_tasks": {
        "method": "GET",
        "url": "/api/workflows/1/tasks",
        "description": "Get all tasks for a workflow"
      },
      "add_task_to_workflow": {
        "method": "POST",
        "url": "/api/workflows/1/tasks",
        "description": "Add a new task to workflow",
        "request_body": {
          "name": "Data Validation",
          "taskType": "FILE_UPDATE",
          "roleId": 2,
          "sequenceOrder": 3,
          "expectedCompletion": 60
        }
      },
      "get_workflow_roles": {
        "method": "GET",
        "url": "/api/workflows/1/roles",
        "description": "Get roles assigned to workflow"
      },
      "assign_role_to_workflow": {
        "method": "POST",
        "url": "/api/workflows/1/roles",
        "description": "Assign role to workflow",
        "request_body": {
          "roleId": 1,
          "userId": 1,
          "isActive": "Y"
        }
      }
    },
    "calendars": {
      "get_all_calendars": {
        "method": "GET",
        "url": "/api/calendars",
        "description": "Retrieve all calendars with pagination",
        "query_params": {
          "page": "0",
          "size": "10",
          "recurrence": "MONTHLY"
        }
      },
      "create_calendar": {
        "method": "POST",
        "url": "/api/calendars",
        "description": "Create a new calendar",
        "request_body": {
          "calendarName": "Business Calendar",
          "description": "Standard business days calendar",
          "startDate": "2025-01-01",
          "endDate": "2025-12-31",
          "recurrence": "MONTHLY",
          "createdBy": "system"
        }
      },
      "get_calendar_days": {
        "method": "GET",
        "url": "/api/calendars/1/days",
        "description": "Get all days for a calendar"
      },
      "add_calendar_day": {
        "method": "POST",
        "url": "/api/calendars/1/days",
        "description": "Add a day to calendar",
        "request_body": {
          "dayDate": "2025-01-01",
          "dayType": "RUNDAY",
          "note": "New Year's Day - Business Closed"
        }
      }
    },
    "files": {
      "upload_file": {
        "method": "POST",
        "url": "/api/files/upload",
        "description": "Upload a file to the system",
        "content_type": "multipart/form-data",
        "form_data": {
          "file": "document.pdf",
          "instanceTaskId": "1",
          "actionType": "FILE_UPLOAD",
          "createdBy": "system"
        }
      },
      "download_file": {
        "method": "GET",
        "url": "/api/files/download/document.pdf",
        "description": "Download a file from the system"
      },
      "consolidate_files": {
        "method": "POST",
        "url": "/api/files/consolidate",
        "description": "Consolidate multiple files",
        "query_params": {
          "instanceTaskId": "1",
          "fileIds": "1,2,3",
          "createdBy": "system"
        }
      }
    },
    "execution": {
      "start_workflow": {
        "method": "POST",
        "url": "/api/execution/workflows/1/start",
        "description": "Start a new workflow instance",
        "query_params": {
          "startedByUserId": "1"
        }
      },
      "get_workflow_instances": {
        "method": "GET",
        "url": "/api/execution/workflows/1/instances",
        "description": "Get all instances of a workflow"
      },
      "get_instance_tasks": {
        "method": "GET",
        "url": "/api/execution/instances/1/tasks",
        "description": "Get all tasks for a workflow instance"
      },
      "start_task": {
        "method": "POST",
        "url": "/api/execution/tasks/1/start",
        "description": "Mark a task as started"
      },
      "complete_task": {
        "method": "POST",
        "url": "/api/execution/tasks/1/complete",
        "description": "Mark a task as completed",
        "query_params": {
          "decisionOutcome": "APPROVED"
        }
      },
      "assign_task": {
        "method": "POST",
        "url": "/api/execution/tasks/1/assign",
        "description": "Assign task to user",
        "query_params": {
          "userId": "2"
        }
      },
      "escalate_task": {
        "method": "POST",
        "url": "/api/execution/tasks/1/escalate",
        "description": "Escalate task to another user",
        "query_params": {
          "escalatedToUserId": "3"
        }
      }
    },
    "dashboard": {
      "get_user_dashboard": {
        "method": "GET",
        "url": "/api/dashboard/user",
        "description": "Get user dashboard data",
        "query_params": {
          "userId": "1"
        }
      },
      "get_admin_dashboard": {
        "method": "GET",
        "url": "/api/dashboard/admin",
        "description": "Get admin dashboard data",
        "query_params": {
          "adminId": "1"
        }
      },
      "get_user_workload": {
        "method": "GET",
        "url": "/api/dashboard/workload",
        "description": "Get user workload summary",
        "query_params": {
          "userId": "1"
        }
      },
      "get_user_notifications": {
        "method": "GET",
        "url": "/api/dashboard/notifications",
        "description": "Get user notifications",
        "query_params": {
          "userId": "1",
          "status": "UNREAD"
        }
      }
    },
    "process_owners": {
      "get_process_owner_dashboard": {
        "method": "GET",
        "url": "/api/process-owners/dashboard",
        "description": "Get process owner dashboard",
        "query_params": {
          "processOwnerId": "1"
        }
      },
      "get_process_owner_workload": {
        "method": "GET",
        "url": "/api/process-owners/workload",
        "description": "Get process owner workload",
        "query_params": {
          "processOwnerId": "1"
        }
      },
      "reassign_task": {
        "method": "POST",
        "url": "/api/process-owners/tasks/1/reassign",
        "description": "Reassign task to different user",
        "query_params": {
          "newUserId": "2",
          "reason": "User unavailable"
        }
      },
      "escalate_workflow": {
        "method": "POST",
        "url": "/api/process-owners/escalate/1",
        "description": "Escalate workflow to higher authority",
        "query_params": {
          "escalatedToUserId": "3",
          "reason": "Complex decision required"
        }
      }
    }
  },
  "authentication": {
    "note": "Development mode: No authentication required. Production mode: Basic authentication with role-based access control."
  },
  "testing": {
    "insomnia_collection": "DocWF_Insomnia_Test_Suite.json",
    "swagger_ui": "http://localhost:8080/swagger-ui.html",
    "openapi_docs": "http://localhost:8080/api-docs",
    "h2_console": "http://localhost:8080/h2-console"
  },
  "sample_data": {
    "users": [
      {
        "userId": 1,
        "username": "alice",
        "firstName": "Alice",
        "lastName": "Smith",
        "email": "alice@example.com",
        "role": "Preparer"
      },
      {
        "userId": 2,
        "username": "bob",
        "firstName": "Bob",
        "lastName": "Johnson",
        "email": "bob@example.com",
        "role": "Reviewer"
      },
      {
        "userId": 3,
        "username": "carol",
        "firstName": "Carol",
        "lastName": "Williams",
        "email": "carol@example.com",
        "role": "Approver"
      }
    ],
    "workflows": [
      {
        "workflowId": 1,
        "name": "Monthly Finance Workflow",
        "description": "Finance reporting workflow",
        "tasks": [
          "Upload Raw Data",
          "Review Data",
          "Consolidate Report",
          "Approval Decision"
        ]
      },
      {
        "workflowId": 2,
        "name": "Quarterly Audit Workflow",
        "description": "Audit workflow for quarterly reports",
        "tasks": [
          "Upload Audit Files",
          "Review Audit Data",
          "Audit Decision"
        ]
      }
    ]
  }
}
