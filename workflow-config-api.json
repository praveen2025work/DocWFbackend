{
  "openapi": "3.0.1",
  "info": {
    "title": "DocWF Workflow Configuration API",
    "description": "APIs for creating, updating, and managing workflow configurations, tasks, roles, and parameters",
    "version": "1.0.0",
    "contact": {
      "name": "DocWF Development Team",
      "email": "dev@docwf.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local Development Server"
    },
    {
      "url": "https://api.docwf.com",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "Workflow Configuration",
      "description": "APIs for creating, updating, and managing workflow configurations"
    },
    {
      "name": "Workflow Roles",
      "description": "APIs for managing workflow roles and role assignments"
    },
    {
      "name": "Workflow Tasks",
      "description": "APIs for managing workflow tasks and task configurations"
    },
    {
      "name": "Workflow Parameters",
      "description": "APIs for managing workflow parameters and configurations"
    }
  ],
  "paths": {
    "/api/workflows": {
      "get": {
        "tags": ["Workflow Configuration"],
        "summary": "Get All Workflows",
        "description": "Retrieves a list of all workflow configurations with optional filtering",
        "operationId": "getAllWorkflows",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "description": "Filter by active status",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workflows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowConfigDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Workflow Configuration"],
        "summary": "Create New Workflow",
        "description": "Creates a new workflow configuration with the specified parameters",
        "operationId": "createWorkflow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowConfigDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Workflow created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "409": {
            "description": "Workflow name already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/workflows/{workflowId}": {
      "get": {
        "tags": ["Workflow Configuration"],
        "summary": "Get Workflow by ID",
        "description": "Retrieves a specific workflow configuration by its unique identifier",
        "operationId": "getWorkflowById",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "Unique identifier of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workflow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigDto"
                }
              }
            }
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Workflow Configuration"],
        "summary": "Update Workflow",
        "description": "Updates an existing workflow configuration with new information",
        "operationId": "updateWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "Unique identifier of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowConfigDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Workflow updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Workflow Configuration"],
        "summary": "Delete Workflow",
        "description": "Deletes a workflow configuration from the system",
        "operationId": "deleteWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "Unique identifier of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Workflow deleted successfully"
          },
          "404": {
            "description": "Workflow not found"
          },
          "409": {
            "description": "Cannot delete workflow with active instances"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/workflows/name/{name}": {
      "get": {
        "tags": ["Workflow Configuration"],
        "summary": "Get Workflow by Name",
        "description": "Retrieves a workflow configuration by its name",
        "operationId": "getWorkflowByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Monthly Report Generation"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workflow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigDto"
                }
              }
            }
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/workflows/{workflowId}/status": {
      "patch": {
        "tags": ["Workflow Configuration"],
        "summary": "Toggle Workflow Status",
        "description": "Activates or deactivates a workflow",
        "operationId": "toggleWorkflowStatus",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Active status (Y/N)",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["Y", "N"]
            },
            "example": "Y"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigDto"
                }
              }
            }
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/workflows/{workflowId}/roles": {
      "get": {
        "tags": ["Workflow Roles"],
        "summary": "Get Workflow Roles",
        "description": "Retrieves all roles assigned to a specific workflow",
        "operationId": "getWorkflowRoles",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workflow roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowConfigRoleDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Workflow Roles"],
        "summary": "Assign Role to Workflow",
        "description": "Assigns a role to a workflow",
        "operationId": "assignRoleToWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowConfigRoleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Role assigned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigRoleDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/workflows/{workflowId}/roles/{roleId}": {
      "put": {
        "tags": ["Workflow Roles"],
        "summary": "Update Workflow Role",
        "description": "Updates a role assignment in a workflow",
        "operationId": "updateWorkflowRole",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowConfigRoleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Workflow role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigRoleDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "Workflow or role not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Workflow Roles"],
        "summary": "Remove Role from Workflow",
        "description": "Removes a role assignment from a workflow",
        "operationId": "removeRoleFromWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Role removed successfully"
          },
          "404": {
            "description": "Workflow or role not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/workflows/{workflowId}/tasks": {
      "get": {
        "tags": ["Workflow Tasks"],
        "summary": "Get Workflow Tasks",
        "description": "Retrieves all tasks defined in a specific workflow",
        "operationId": "getWorkflowTasks",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workflow tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowConfigTaskDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Workflow Tasks"],
        "summary": "Add Task to Workflow",
        "description": "Adds a new task to a workflow",
        "operationId": "addTaskToWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowConfigTaskDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Task added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigTaskDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/workflows/{workflowId}/tasks/{taskId}": {
      "put": {
        "tags": ["Workflow Tasks"],
        "summary": "Update Workflow Task",
        "description": "Updates a task configuration in a workflow",
        "operationId": "updateWorkflowTask",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowConfigTaskDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Workflow task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigTaskDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "Workflow or task not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Workflow Tasks"],
        "summary": "Remove Task from Workflow",
        "description": "Removes a task from a workflow",
        "operationId": "removeTaskFromWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Task removed successfully"
          },
          "404": {
            "description": "Workflow or task not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/workflows/{workflowId}/parameters": {
      "get": {
        "tags": ["Workflow Parameters"],
        "summary": "Get Workflow Parameters",
        "description": "Retrieves all parameters configured for a specific workflow",
        "operationId": "getWorkflowParameters",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workflow parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowConfigParamDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Workflow Parameters"],
        "summary": "Add Parameter to Workflow",
        "description": "Adds a new parameter to a workflow",
        "operationId": "addParameterToWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowConfigParamDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Parameter added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigParamDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/workflows/{workflowId}/parameters/{paramId}": {
      "put": {
        "tags": ["Workflow Parameters"],
        "summary": "Update Workflow Parameter",
        "description": "Updates a parameter configuration in a workflow",
        "operationId": "updateWorkflowParameter",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          },
          {
            "name": "paramId",
            "in": "path",
            "description": "ID of the parameter",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowConfigParamDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Workflow parameter updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowConfigParamDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "Workflow or parameter not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Workflow Parameters"],
        "summary": "Remove Parameter from Workflow",
        "description": "Removes a parameter from a workflow",
        "operationId": "removeParameterFromWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "ID of the workflow",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          },
          {
            "name": "paramId",
            "in": "path",
            "description": "ID of the parameter",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Parameter removed successfully"
          },
          "404": {
            "description": "Workflow or parameter not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WorkflowConfigDto": {
        "type": "object",
        "properties": {
          "workflowId": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the workflow"
          },
          "name": {
            "type": "string",
            "description": "Name of the workflow",
            "example": "Monthly Report Generation"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the workflow",
            "example": "Automated workflow for generating monthly reports"
          },
          "reminderBeforeDueMins": {
            "type": "integer",
            "description": "Minutes before due date to send reminders",
            "example": 15
          },
          "minutesAfterDue": {
            "type": "integer",
            "description": "Minutes after due date before escalation",
            "example": 10
          },
          "escalationAfterMins": {
            "type": "integer",
            "description": "Minutes after due date to escalate tasks",
            "example": 30
          },
          "dueInMins": {
            "type": "integer",
            "description": "Total minutes allowed for workflow completion",
            "example": 120
          },
          "isActive": {
            "type": "string",
            "enum": ["Y", "N"],
            "description": "Whether the workflow is active"
          },
          "createdBy": {
            "type": "string",
            "description": "Username of the user who created this workflow"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the workflow was created"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true,
            "description": "Username of the user who last updated this workflow"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp when the workflow was last updated"
          },
          "workflowRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowConfigRoleDto"
            },
            "nullable": true,
            "description": "Roles associated with this workflow"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowConfigTaskDto"
            },
            "nullable": true,
            "description": "Tasks defined in this workflow"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowConfigParamDto"
            },
            "nullable": true,
            "description": "Parameters configured for this workflow"
          }
        },
        "required": ["name", "description", "isActive", "createdBy"]
      },
      "WorkflowConfigRoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the role configuration"
          },
          "workflowId": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the workflow"
          },
          "roleId": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the role"
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the user assigned to this role"
          },
          "isActive": {
            "type": "string",
            "enum": ["Y", "N"],
            "description": "Whether this role assignment is active"
          },
          "roleName": {
            "type": "string",
            "description": "Name of the role"
          },
          "userUsername": {
            "type": "string",
            "description": "Username of the assigned user"
          }
        }
      },
      "WorkflowConfigTaskDto": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the task configuration"
          },
          "workflowId": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the workflow"
          },
          "name": {
            "type": "string",
            "description": "Name of the task"
          },
          "description": {
            "type": "string",
            "description": "Description of the task"
          },
          "taskType": {
            "type": "string",
            "enum": ["FILE_UPLOAD", "FILE_DOWNLOAD", "FILE_UPDATE", "CONSOLIDATE_FILES", "DECISION"],
            "description": "Type of the task"
          },
          "sequenceOrder": {
            "type": "integer",
            "description": "Order of execution in the workflow"
          },
          "roleId": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the role responsible for this task"
          },
          "expectedDay": {
            "type": "integer",
            "description": "Expected day for task completion"
          },
          "expectedTime": {
            "type": "string",
            "description": "Expected time for task completion"
          },
          "escalateRemind": {
            "type": "string",
            "enum": ["Y", "N"],
            "description": "Whether to send reminders for this task"
          },
          "escalateAfter": {
            "type": "integer",
            "description": "Minutes after due time to escalate"
          },
          "createdBy": {
            "type": "string",
            "description": "Username of the user who created this task"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the task was created"
          }
        }
      },
      "WorkflowConfigParamDto": {
        "type": "object",
        "properties": {
          "paramId": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the parameter"
          },
          "workflowId": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the workflow"
          },
          "paramKey": {
            "type": "string",
            "description": "Parameter key"
          },
          "paramValue": {
            "type": "string",
            "description": "Parameter value"
          },
          "paramType": {
            "type": "string",
            "description": "Type of the parameter"
          },
          "createdBy": {
            "type": "string",
            "description": "Username of the user who created this parameter"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the parameter was created"
          }
        }
      }
    }
  }
}
