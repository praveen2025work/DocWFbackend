{
  "api_overview": {
    "total_endpoints": "~60 (Reduced from 180+)",
    "structure": "Predicate-based search with unified endpoints",
    "controllers": {
      "calendar_management": 18,
      "workflow_configuration": 18,
      "workflow_execution": 25,
      "user_management": 10,
      "role_management": 9,
      "file_management": 8,
      "dashboard_views": 15,
      "process_owner": 12
    }
  },
  "calendar_management": {
    "description": "18 endpoints for managing workflow calendars with holidays and run days",
    "endpoints": {
      "create_calendar": {
        "method": "POST",
        "url": "/api/calendar",
        "description": "Create a new workflow calendar",
        "request_body": {
          "calendarName": "US Business Days 2025",
          "description": "Calendar for US business days excluding holidays and weekends",
          "startDate": "2025-01-01",
          "endDate": "2025-12-31",
          "recurrence": "YEARLY",
          "createdBy": "admin@docwf.com"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/calendar' -H 'Content-Type: application/json' -d '{\"calendarName\":\"US Business Days 2025\",\"description\":\"Calendar for US business days excluding holidays and weekends\",\"startDate\":\"2025-01-01\",\"endDate\":\"2025-12-31\",\"recurrence\":\"YEARLY\",\"createdBy\":\"admin@docwf.com\"}'"
      },
      "search_calendars": {
        "method": "GET",
        "url": "/api/calendar/search",
        "description": "Search calendars using multiple criteria with pagination",
        "query_parameters": {
          "calendarName": "Business",
          "recurrence": "YEARLY",
          "startDate": "2025-01-01",
          "page": 0,
          "size": 20
        },
        "curl": "curl -X GET 'http://localhost:8080/api/calendar/search?calendarName=Business&recurrence=YEARLY&startDate=2025-01-01&page=0&size=20'"
      },
      "add_calendar_day": {
        "method": "POST",
        "url": "/api/calendar/1/days",
        "description": "Add a single day to a calendar",
        "request_body": {
          "dayDate": "2025-01-01",
          "dayType": "HOLIDAY",
          "note": "New Year Day"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/calendar/1/days' -H 'Content-Type: application/json' -d '{\"dayDate\":\"2025-01-01\",\"dayType\":\"HOLIDAY\",\"note\":\"New Year Day\"}'"
      },
      "add_calendar_days_batch": {
        "method": "POST",
        "url": "/api/calendar/1/days/batch",
        "description": "Add multiple days to a calendar in batch",
        "request_body": [
          {
            "dayDate": "2025-01-01",
            "dayType": "HOLIDAY",
            "note": "New Year Day"
          },
          {
            "dayDate": "2025-01-20",
            "dayType": "HOLIDAY",
            "note": "Martin Luther King Jr. Day"
          }
        ],
        "curl": "curl -X POST 'http://localhost:8080/api/calendar/1/days/batch' -H 'Content-Type: application/json' -d '[{\"dayDate\":\"2025-01-01\",\"dayType\":\"HOLIDAY\",\"note\":\"New Year Day\"},{\"dayDate\":\"2025-01-20\",\"dayType\":\"HOLIDAY\",\"note\":\"Martin Luther King Jr. Day\"}]'"
      },
      "validate_date": {
        "method": "GET",
        "url": "/api/calendar/1/validate-date",
        "description": "Check if a specific date is valid for workflow execution",
        "query_parameters": {
          "date": "2025-01-01"
        },
        "curl": "curl -X GET 'http://localhost:8080/api/calendar/1/validate-date?date=2025-01-01'"
      },
      "can_execute_workflow": {
        "method": "GET",
        "url": "/api/calendar/1/can-execute",
        "description": "Check if a workflow can execute on a specific date",
        "query_parameters": {
          "date": "2025-01-02"
        },
        "curl": "curl -X GET 'http://localhost:8080/api/calendar/1/can-execute?date=2025-01-02'"
      }
    }
  },
  "workflow_configuration": {
    "description": "18 endpoints for managing workflow configurations, tasks, roles, and parameters",
    "endpoints": {
      "create_workflow": {
        "method": "POST",
        "url": "/api/workflows",
        "description": "Create a new workflow configuration",
        "request_body": {
          "name": "Document Approval Workflow",
          "description": "Workflow for approving documents",
          "dueInMins": 1440,
          "escalationAfterMins": 2880,
          "reminderBeforeDueMins": 240,
          "minutesAfterDue": 60,
          "isActive": "Y",
          "createdBy": "admin@docwf.com"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/workflows' -H 'Content-Type: application/json' -d '{\"name\":\"Document Approval Workflow\",\"description\":\"Workflow for approving documents\",\"dueInMins\":1440,\"escalationAfterMins\":2880,\"reminderBeforeDueMins\":240,\"minutesAfterDue\":60,\"isActive\":\"Y\",\"createdBy\":\"admin@docwf.com\"}'"
      },
      "search_workflows": {
        "method": "GET",
        "url": "/api/workflows/search",
        "description": "Search workflows using multiple criteria with pagination",
        "query_parameters": {
          "name": "approval",
          "isActive": "Y",
          "minDueTime": 1440,
          "page": 0,
          "size": 20
        },
        "curl": "curl -X GET 'http://localhost:8080/api/workflows/search?name=approval&isActive=Y&minDueTime=1440&page=0&size=20'"
      },
      "add_task": {
        "method": "POST",
        "url": "/api/workflows/1/tasks",
        "description": "Add a task to a workflow",
        "request_body": {
          "name": "Initial Review",
          "description": "Initial document review",
          "sequenceOrder": 1,
          "taskType": "REVIEW",
          "roleId": 1,
          "createdBy": "admin@docwf.com"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/workflows/1/tasks' -H 'Content-Type: application/json' -d '{\"name\":\"Initial Review\",\"description\":\"Initial document review\",\"sequenceOrder\":1,\"taskType\":\"REVIEW\",\"roleId\":1,\"createdBy\":\"admin@docwf.com\"}'"
      },
      "assign_role": {
        "method": "POST",
        "url": "/api/workflows/1/roles",
        "description": "Assign a role to a workflow",
        "request_body": {
          "roleId": 1,
          "createdBy": "admin@docwf.com"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/workflows/1/roles' -H 'Content-Type: application/json' -d '{\"roleId\":1,\"createdBy\":\"admin@docwf.com\"}'"
      },
      "add_parameter": {
        "method": "POST",
        "url": "/api/workflows/1/parameters",
        "description": "Add a parameter to a workflow",
        "request_body": {
          "paramKey": "MAX_FILE_SIZE",
          "paramValue": "10MB",
          "description": "Maximum file size allowed",
          "createdBy": "admin@docwf.com"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/workflows/1/parameters' -H 'Content-Type: application/json' -d '{\"paramKey\":\"MAX_FILE_SIZE\",\"paramValue\":\"10MB\",\"description\":\"Maximum file size allowed\",\"createdBy\":\"admin@docwf.com\"}'"
      },
      "toggle_status": {
        "method": "PATCH",
        "url": "/api/workflows/1/status",
        "description": "Toggle workflow active status",
        "query_parameters": {
          "isActive": "N"
        },
        "curl": "curl -X PATCH 'http://localhost:8080/api/workflows/1/status?isActive=N'"
      }
    }
  },
  "user_management": {
    "description": "10 endpoints for managing workflow users with predicate-based search",
    "endpoints": {
      "create_user": {
        "method": "POST",
        "url": "/api/users",
        "description": "Create a new workflow user",
        "request_body": {
          "username": "john.doe",
          "firstName": "John",
          "lastName": "Doe",
          "email": "john.doe@company.com",
          "isActive": "Y",
          "escalationTo": 2,
          "createdBy": "admin@docwf.com"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/users' -H 'Content-Type: application/json' -d '{\"username\":\"john.doe\",\"firstName\":\"John\",\"lastName\":\"Doe\",\"email\":\"john.doe@company.com\",\"isActive\":\"Y\",\"escalationTo\":2,\"createdBy\":\"admin@docwf.com\"}'"
      },
      "search_users": {
        "method": "GET",
        "url": "/api/users/search",
        "description": "Search users using multiple criteria with pagination",
        "query_parameters": {
          "firstName": "John",
          "isActive": "Y",
          "roleName": "REVIEWER",
          "page": 0,
          "size": 20
        },
        "curl": "curl -X GET 'http://localhost:8080/api/users/search?firstName=John&isActive=Y&roleName=REVIEWER&page=0&size=20'"
      },
      "toggle_user_status": {
        "method": "PATCH",
        "url": "/api/users/1/status",
        "description": "Toggle user active status",
        "query_parameters": {
          "isActive": "N"
        },
        "curl": "curl -X PATCH 'http://localhost:8080/api/users/1/status?isActive=N'"
      },
      "set_escalation": {
        "method": "PATCH",
        "url": "/api/users/1/escalation",
        "description": "Set user escalation hierarchy",
        "query_parameters": {
          "escalationToUserId": 3
        },
        "curl": "curl -X PATCH 'http://localhost:8080/api/users/1/escalation?escalationToUserId=3'"
      },
      "check_username": {
        "method": "GET",
        "url": "/api/users/check/username/john.doe",
        "description": "Check if username is available",
        "curl": "curl -X GET 'http://localhost:8080/api/users/check/username/john.doe'"
      }
    }
  },
  "role_management": {
    "description": "9 endpoints for managing workflow roles with predicate-based search",
    "endpoints": {
      "create_role": {
        "method": "POST",
        "url": "/api/roles",
        "description": "Create a new workflow role",
        "request_body": {
          "roleName": "REVIEWER",
          "isActive": "Y",
          "createdBy": "admin@docwf.com"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/roles' -H 'Content-Type: application/json' -d '{\"roleName\":\"REVIEWER\",\"isActive\":\"Y\",\"createdBy\":\"admin@docwf.com\"}'"
      },
      "search_roles": {
        "method": "GET",
        "url": "/api/roles/search",
        "description": "Search roles using multiple criteria with pagination",
        "query_parameters": {
          "roleName": "REVIEWER",
          "isActive": "Y",
          "workflowId": 1,
          "page": 0,
          "size": 20
        },
        "curl": "curl -X GET 'http://localhost:8080/api/roles/search?roleName=REVIEWER&isActive=Y&workflowId=1&page=0&size=20'"
      },
      "assign_role_to_user": {
        "method": "POST",
        "url": "/api/roles/1/assign/user/1",
        "description": "Assign a role to a user",
        "curl": "curl -X POST 'http://localhost:8080/api/roles/1/assign/user/1'"
      },
      "toggle_role_status": {
        "method": "PATCH",
        "url": "/api/roles/1/status",
        "description": "Toggle role active status",
        "query_parameters": {
          "isActive": "N"
        },
        "curl": "curl -X PATCH 'http://localhost:8080/api/roles/1/status?isActive=N'"
      }
    }
  },
  "workflow_execution": {
    "description": "25 endpoints for runtime workflow management and task execution",
    "endpoints": {
      "start_workflow": {
        "method": "POST",
        "url": "/api/execution/workflows/1/start",
        "description": "Start a workflow instance",
        "query_parameters": {
          "startedByUserId": 1
        },
        "curl": "curl -X POST 'http://localhost:8080/api/execution/workflows/1/start?startedByUserId=1'"
      },
      "start_workflow_with_calendar": {
        "method": "POST",
        "url": "/api/execution/workflows/1/start-with-calendar",
        "description": "Start workflow with calendar validation",
        "query_parameters": {
          "startedByUserId": 1,
          "calendarId": 1
        },
        "curl": "curl -X POST 'http://localhost:8080/api/execution/workflows/1/start-with-calendar?startedByUserId=1&calendarId=1'"
      },
      "get_instance_tasks": {
        "method": "GET",
        "url": "/api/execution/instances/1/tasks",
        "description": "Get all tasks for a workflow instance",
        "curl": "curl -X GET 'http://localhost:8080/api/execution/instances/1/tasks'"
      },
      "assign_task": {
        "method": "POST",
        "url": "/api/execution/tasks/1/assign",
        "description": "Assign a task to a user",
        "query_parameters": {
          "userId": 2
        },
        "curl": "curl -X POST 'http://localhost:8080/api/execution/tasks/1/assign?userId=2'"
      },
      "complete_task": {
        "method": "POST",
        "url": "/api/execution/tasks/1/complete",
        "description": "Complete a task with decision outcome",
        "query_parameters": {
          "decisionOutcome": "APPROVED",
          "completedBy": 2
        },
        "curl": "curl -X POST 'http://localhost:8080/api/execution/tasks/1/complete?decisionOutcome=APPROVED&completedBy=2'"
      },
      "get_next_task": {
        "method": "GET",
        "url": "/api/execution/instances/1/next-task",
        "description": "Get the next pending task for a workflow instance",
        "curl": "curl -X GET 'http://localhost:8080/api/execution/instances/1/next-task'"
      },
      "execute_next_task": {
        "method": "POST",
        "url": "/api/execution/instances/1/execute-next",
        "description": "Execute the next pending task",
        "curl": "curl -X POST 'http://localhost:8080/api/execution/instances/1/execute-next'"
      },
      "check_calendar_execution": {
        "method": "GET",
        "url": "/api/execution/workflows/1/calendar/1/can-execute",
        "description": "Check if workflow can execute on a specific date",
        "query_parameters": {
          "date": "2025-01-02"
        },
        "curl": "curl -X GET 'http://localhost:8080/api/execution/workflows/1/calendar/1/can-execute?date=2025-01-02'"
      },
      "get_next_valid_date": {
        "method": "GET",
        "url": "/api/execution/workflows/1/calendar/1/next-valid-date",
        "description": "Get the next valid date for workflow execution",
        "query_parameters": {
          "fromDate": "2025-01-01"
        },
        "curl": "curl -X GET 'http://localhost:8080/api/execution/workflows/1/calendar/1/next-valid-date?fromDate=2025-01-01'"
      }
    }
  },
  "file_management": {
    "description": "8 endpoints for file upload, download, and consolidation",
    "endpoints": {
      "upload_file": {
        "method": "POST",
        "url": "/api/files/upload",
        "description": "Upload a file for a workflow task",
        "form_data": {
          "file": "[binary file data]",
          "instanceTaskId": 1,
          "actionType": "UPLOAD",
          "createdBy": "john.doe"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/files/upload' -F 'file=@document.pdf' -F 'instanceTaskId=1' -F 'actionType=UPLOAD' -F 'createdBy=john.doe'"
      },
      "download_file": {
        "method": "GET",
        "url": "/api/files/download/uuid-filename.pdf",
        "description": "Download a file by filename",
        "curl": "curl -X GET 'http://localhost:8080/api/files/download/uuid-filename.pdf' -o downloaded_file.pdf"
      },
      "get_file_info": {
        "method": "GET",
        "url": "/api/files/info/uuid-filename.pdf",
        "description": "Get file information",
        "curl": "curl -X GET 'http://localhost:8080/api/files/info/uuid-filename.pdf'"
      },
      "delete_file": {
        "method": "DELETE",
        "url": "/api/files/uuid-filename.pdf",
        "description": "Delete a file",
        "curl": "curl -X DELETE 'http://localhost:8080/api/files/uuid-filename.pdf'"
      },
      "consolidate_files": {
        "method": "POST",
        "url": "/api/files/consolidate",
        "description": "Consolidate multiple files into one",
        "form_data": {
          "instanceTaskId": 1,
          "fileIds": "1,2,3",
          "createdBy": "john.doe"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/files/consolidate' -F 'instanceTaskId=1' -F 'fileIds=1,2,3' -F 'createdBy=john.doe'"
      }
    }
  },
  "dashboard_views": {
    "description": "15 endpoints for role-based dashboards and analytics",
    "endpoints": {
      "user_dashboard": {
        "method": "GET",
        "url": "/api/dashboard/user",
        "description": "Get user dashboard with tasks and workflows",
        "query_parameters": {
          "userId": 1
        },
        "curl": "curl -X GET 'http://localhost:8080/api/dashboard/user?userId=1'"
      },
      "user_tasks": {
        "method": "GET",
        "url": "/api/dashboard/tasks",
        "description": "Get user tasks with filtering",
        "query_parameters": {
          "userId": 1,
          "status": "PENDING",
          "priority": "HIGH"
        },
        "curl": "curl -X GET 'http://localhost:8080/api/dashboard/tasks?userId=1&status=PENDING&priority=HIGH'"
      },
      "process_owner_dashboard": {
        "method": "GET",
        "url": "/api/dashboard/process-owner",
        "description": "Get process owner dashboard",
        "query_parameters": {
          "processOwnerId": 1
        },
        "curl": "curl -X GET 'http://localhost:8080/api/dashboard/process-owner?processOwnerId=1'"
      },
      "manager_dashboard": {
        "method": "GET",
        "url": "/api/dashboard/manager",
        "description": "Get manager dashboard with team performance",
        "query_parameters": {
          "managerId": 1
        },
        "curl": "curl -X GET 'http://localhost:8080/api/dashboard/manager?managerId=1'"
      },
      "admin_dashboard": {
        "method": "GET",
        "url": "/api/dashboard/admin",
        "description": "Get admin dashboard with system statistics",
        "query_parameters": {
          "adminId": 1
        },
        "curl": "curl -X GET 'http://localhost:8080/api/dashboard/admin?adminId=1'"
      }
    }
  },
  "process_owner": {
    "description": "12 endpoints for escalation and process management",
    "endpoints": {
      "escalate_workflow": {
        "method": "POST",
        "url": "/api/process-owners/escalate/1",
        "description": "Escalate a workflow instance",
        "query_parameters": {
          "escalatedToUserId": 3,
          "reason": "Task overdue"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/process-owners/escalate/1?escalatedToUserId=3&reason=Task overdue'"
      },
      "reassign_task": {
        "method": "POST",
        "url": "/api/process-owners/tasks/1/reassign",
        "description": "Reassign a task to another user",
        "query_parameters": {
          "newUserId": 4,
          "reason": "User unavailable"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/process-owners/tasks/1/reassign?newUserId=4&reason=User unavailable'"
      },
      "override_decision": {
        "method": "POST",
        "url": "/api/process-owners/tasks/1/override",
        "description": "Override a task decision",
        "query_parameters": {
          "decision": "APPROVED",
          "reason": "Manager override"
        },
        "curl": "curl -X POST 'http://localhost:8080/api/process-owners/tasks/1/override?decision=APPROVED&reason=Manager override'"
      },
      "get_escalation_queue": {
        "method": "GET",
        "url": "/api/process-owners/escalation-queue",
        "description": "Get escalation queue for process owner",
        "query_parameters": {
          "processOwnerId": 1
        },
        "curl": "curl -X GET 'http://localhost:8080/api/process-owners/escalation-queue?processOwnerId=1'"
      },
      "get_process_owner_stats": {
        "method": "GET",
        "url": "/api/process-owners/stats",
        "description": "Get process owner statistics",
        "query_parameters": {
          "processOwnerId": 1,
          "startDate": "2025-08-01",
          "endDate": "2025-08-20"
        },
        "curl": "curl -X GET 'http://localhost:8080/api/process-owners/stats?processOwnerId=1&startDate=2025-08-01&endDate=2025-08-20'"
      }
    }
  },
  "complete_workflow_example": {
    "description": "Complete workflow setup example with calendar integration",
    "steps": [
      {
        "step": 1,
        "action": "Create Calendar",
        "endpoint": "POST /api/calendar",
        "description": "Create a business calendar for 2025"
      },
      {
        "step": 2,
        "action": "Add Holidays",
        "endpoint": "POST /api/calendar/1/days/batch",
        "description": "Add US holidays to the calendar"
      },
      {
        "step": 3,
        "action": "Create Workflow",
        "endpoint": "POST /api/workflows",
        "description": "Create document approval workflow"
      },
      {
        "step": 4,
        "action": "Add Tasks",
        "endpoint": "POST /api/workflows/1/tasks",
        "description": "Add review and approval tasks"
      },
      {
        "step": 5,
        "action": "Start Workflow",
        "endpoint": "POST /api/execution/workflows/1/start-with-calendar",
        "description": "Start workflow with calendar validation"
      },
      {
        "step": 6,
        "action": "Execute Tasks",
        "endpoint": "POST /api/execution/tasks/1/complete",
        "description": "Complete tasks following calendar rules"
      }
    ],
    "curl_sequence": [
      "curl -X POST 'http://localhost:8080/api/calendar' -H 'Content-Type: application/json' -d '{\"calendarName\":\"US Business Days 2025\",\"description\":\"Calendar for US business days excluding holidays and weekends\",\"startDate\":\"2025-01-01\",\"endDate\":\"2025-12-31\",\"recurrence\":\"YEARLY\",\"createdBy\":\"admin@docwf.com\"}'",
      "curl -X POST 'http://localhost:8080/api/calendar/1/days/batch' -H 'Content-Type: application/json' -d '[{\"dayDate\":\"2025-01-01\",\"dayType\":\"HOLIDAY\",\"note\":\"New Year Day\"},{\"dayDate\":\"2025-01-20\",\"dayType\":\"HOLIDAY\",\"note\":\"Martin Luther King Jr. Day\"}]'",
      "curl -X POST 'http://localhost:8080/api/workflows' -H 'Content-Type: application/json' -d '{\"name\":\"Document Approval Workflow\",\"description\":\"Workflow for approving documents\",\"dueInMins\":1440,\"escalationAfterMins\":2880,\"reminderBeforeDueMins\":240,\"minutesAfterDue\":60,\"isActive\":\"Y\",\"createdBy\":\"admin@docwf.com\"}'",
      "curl -X POST 'http://localhost:8080/api/workflows/1/tasks' -H 'Content-Type: application/json' -d '{\"name\":\"Initial Review\",\"description\":\"Initial document review\",\"sequenceOrder\":1,\"taskType\":\"REVIEW\",\"roleId\":1,\"createdBy\":\"admin@docwf.com\"}'",
      "curl -X POST 'http://localhost:8080/api/execution/workflows/1/start-with-calendar?startedByUserId=1&calendarId=1'",
      "curl -X POST 'http://localhost:8080/api/execution/tasks/1/complete?decisionOutcome=APPROVED&completedBy=2'"
    ]
  },
  "predicate_search_examples": {
    "description": "Examples of predicate-based search across all controllers",
    "calendar_search": {
      "description": "Search calendars with multiple criteria",
      "url": "/api/calendar/search?calendarName=Business&recurrence=YEARLY&startDate=2025-01-01&page=0&size=20",
      "curl": "curl -X GET 'http://localhost:8080/api/calendar/search?calendarName=Business&recurrence=YEARLY&startDate=2025-01-01&page=0&size=20'"
    },
    "workflow_search": {
      "description": "Search workflows with multiple criteria",
      "url": "/api/workflows/search?name=approval&isActive=Y&minDueTime=1440&page=0&size=20",
      "curl": "curl -X GET 'http://localhost:8080/api/workflows/search?name=approval&isActive=Y&minDueTime=1440&page=0&size=20'"
    },
    "user_search": {
      "description": "Search users with multiple criteria",
      "url": "/api/users/search?firstName=John&isActive=Y&roleName=REVIEWER&page=0&size=20",
      "curl": "curl -X GET 'http://localhost:8080/api/users/search?firstName=John&isActive=Y&roleName=REVIEWER&page=0&size=20'"
    },
    "role_search": {
      "description": "Search roles with multiple criteria",
      "url": "/api/roles/search?roleName=REVIEWER&isActive=Y&workflowId=1&page=0&size=20",
      "curl": "curl -X GET 'http://localhost:8080/api/roles/search?roleName=REVIEWER&isActive=Y&workflowId=1&page=0&size=20'"
    }
  },
  "pagination_examples": {
    "description": "Examples of pagination across all search endpoints",
    "basic_pagination": {
      "description": "Basic pagination with page and size",
      "url": "?page=0&size=20",
      "parameters": {
        "page": "Page number (0-based)",
        "size": "Page size (number of items per page)"
      }
    },
    "with_sorting": {
      "description": "Pagination with sorting",
      "url": "?page=0&size=20&sort=name,asc",
      "parameters": {
        "page": "Page number (0-based)",
        "size": "Page size",
        "sort": "Sort field and direction (field,direction)"
      }
    },
    "with_filtering": {
      "description": "Pagination with filtering",
      "url": "?page=0&size=20&isActive=Y&createdAfter=2025-01-01",
      "parameters": {
        "page": "Page number (0-based)",
        "size": "Page size",
        "isActive": "Filter by active status",
        "createdAfter": "Filter by creation date"
      }
    }
  },
  "response_formats": {
    "description": "Standard response formats for different endpoint types",
    "single_entity": {
      "description": "Response for single entity operations (GET by ID, POST, PUT)",
      "format": "Direct entity object"
    },
    "paginated_list": {
      "description": "Response for search and list operations with pagination",
      "format": {
        "content": "Array of entities",
        "pageable": "Pagination information",
        "totalElements": "Total number of entities",
        "totalPages": "Total number of pages",
        "last": "Boolean indicating if this is the last page",
        "first": "Boolean indicating if this is the first page",
        "numberOfElements": "Number of elements in current page"
      }
    },
    "simple_response": {
      "description": "Response for simple operations (DELETE, status updates)",
      "format": "HTTP status code only or simple boolean/string response"
    }
  }
}
